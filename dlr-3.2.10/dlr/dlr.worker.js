/*!
* Dynamsoft JavaScript Library
* @product Dynamsoft Label Recognizer JS Edition
* @website http://www.dynamsoft.com
* @copyright Copyright 2024, Dynamsoft Corporation
* @author Dynamsoft
* @version 3.0.30-dev-20240326165358
* @fileoverview Dynamsoft JavaScript Library for Barcode Reader
* More info on dlr JS: https://www.dynamsoft.com/label-recognition/docs/web/programming/javascript/
*/
!function(){"use strict";let e={};const t=self;t.dlrWorkerVersion="3.0.30-dev-20240326165358";const r=t.checkAndAutoLoadCaffeModel=async(t,r)=>{if(!e[t]){let o={Letter:2711347,Number:2626880,NumberLetter:2733480,NumberUppercase:2679209,Uppercase:2659096,MRZ:2681184,VIN:2679232}[t];e[t]=(async()=>{try{let a,s,n;const d=new TextDecoder,l=r+t+".data",f=await new Promise(((e,a)=>{const s=new XMLHttpRequest;s.responseType="arraybuffer",s.onload=()=>{e({ok:!0,arrayBuffer:()=>s.response})},s.onerror=s.onabort=()=>{a({ok:!1,status:s.status})},s.onloadstart=()=>{postMessage({type:"event",id:-1,body:{loaded:0,total:o||0,tag:"starting",resourcesPath:r+t+".data"}})},s.onloadend=()=>{postMessage({type:"event",id:-1,body:{loaded:o||0,total:o||0,tag:"completed",resourcesPath:r+t+".data"}})};let n=Date.now();s.onprogress=e=>{if(e.lengthComputable&&(o=e.total),o){const t=Date.now();n+500<t&&(postMessage({type:"event",id:-1,body:{total:o,loaded:e.loaded,tag:"in progress",resourcesPath:l}}),n=t)}},s.open("GET",l,!0),s.send()}));if(!f.ok)throw new Error(`Network error. Status: ${f.status}.`);a=await f.arrayBuffer();{if(!d.decode(new Uint8Array(a,0,8)).startsWith("DLR_MDL"))throw new Error("Model data type incorrect.");let e=0;const t=new Uint8Array(a,8,8);for(let r=7;r>=0;--r)e=256*e+t[r];const r=d.decode(new Uint8Array(a,16,e));s=JSON.parse(r),n=16+e}let c=e=>{const t=s[e];if(!t)throw new Error(`File name '${e}' not found.`);return new Uint8Array(a,n+t[0],t[1])},i=JSON.parse(d.decode(c(t+".config.json")));const p=i.mainModel,u=i.assistModels,m=i.modelFilter;{const e=c(p+".prototxt"),r=c(p+".txt"),o=c(p+".caffemodel");ep(),wasmImports.emscripten_bind_DlrWasm_appendCaffeModelBuffer_7(es(t),setBufferIntoWasm(e,0),e.length,setBufferIntoWasm(r,1),r.length,setBufferIntoWasm(o,2),o.length)}if(u)for(let e of u){const r=t+e,o=p+e,a=c(o+".prototxt"),s=c(o+".txt"),n=c(o+".caffemodel");wasmImports.emscripten_bind_DlrWasm_appendCaffeModelBuffer_7(r,a,a.length,s,s.length,n,n.length)}if(m){const e=c(m+".txt");wasmImports.emscripten_bind_DlrWasm_appendModelFilterFileBuffer_3(t,e,e.length)}return e[t]=!0}catch(r){throw delete e[t],r}})()}await e[t]};Object.assign(mapController,{dlr_appendCaffeModelBuffer:async(e,t)=>{try{await r(e.dataName,e.dataPath),handleTaskRes(t,{success:!0})}catch(e){return void handleTaskErr(t,e)}}})}();
